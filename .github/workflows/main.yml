name: main
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          npm ci || npm install
      - name: Run type check
        run: npm run type || echo "Type check script not found"
      - name: Run lint
        run: npm run lint || echo "Lint script not found"
      - name: Run tests
        run: npm test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci || npm install
      - name: Update action.yml
        run: |
          if [ -f "action.yml" ]; then
            sed -i "s/image: .*/image: Dockerfile/" action.yml
          else
            echo "action.yml not found"
            exit 1
          fi
      - name: Create dist directory
        run: mkdir -p dist
      - name: Generate snake game
        id: generate-snake
        uses: ./
        with:
          github_user_name: dimasdaffa
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
      - name: Verify generated files
        run: |
          ls -la dist
          for file in github-contribution-grid-snake.svg github-contribution-grid-snake-dark.svg github-contribution-grid-snake.gif; do
            if [ ! -f "dist/$file" ]; then
              echo "Missing file: dist/$file"
              exit 1
            fi
          done
      - uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action-svg-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci || npm install
      - name: Build svg-only action
        run: |
          npm run build:action || exit 1
          if [ -d "svg-only/dist" ]; then
            rm -r svg-only/dist
          fi
          if [ -d "packages/action/dist" ]; then
            mkdir -p svg-only
            mv packages/action/dist svg-only/
          else
            echo "packages/action/dist not found"
            exit 1
          fi
      - name: Create dist directory
        run: mkdir -p dist
      - name: Generate SVG
        id: generate-snake
        uses: ./svg-only
        with:
          github_user_name: dimasdaffa
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
      - name: Verify generated files
        run: |
          ls -la dist
          for file in github-contribution-grid-snake.svg github-contribution-grid-snake-dark.svg; do
            if [ ! -f "dist/$file" ]; then
              echo "Missing file: dist/$file"
              exit 1
            fi
          done
      - uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output-svg-only
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-ghpages:
    runs-on: ubuntu-latest
    needs: [test, test-action, test-action-svg-only]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci || npm install
      - name: Build demo
        run: npm run build:demo
        env:
          GITHUB_USER_CONTRIBUTION_API_ENDPOINT: https://snk-one.vercel.app/api/github-user-contribution/
      - uses: crazy-max/ghaction-github-pages@v4
        if: success() && github.ref == 'refs/heads/main'
        with:
          target_branch: gh-pages
          build_dir: packages/demo/dist
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN_GH_PAGES }}
